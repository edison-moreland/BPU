library(logicworld) {
    cell(BUF) {
        area: 2;
        pin(A) { direction: input; }
        pin(Y) { direction: output;
                 function: "A"; }
    }
    cell(NOT) {
        area: 2;
        pin(A) { direction: input; }
        pin(Y) { direction: output;
                 function: "A'"; }
    }
    cell(AND) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(Y) { direction: output;
                 function: "A*B"; }
    }
    cell(AND3) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(C) { direction: input; }
        pin(Y) { direction: output;
                 function: "A*B*C"; }
    }
    cell(AND4) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(C) { direction: input; }
        pin(D) { direction: input; }
        pin(Y) { direction: output;
                 function: "A*B*C*D"; }
    }
    cell(NAND) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(Y) { direction: output;
                 function: "(A*B)'"; }
    }
    cell(NOR) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(Y) { direction: output;
                 function: "(A+B)'"; }
    }
    cell(OR) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(Y) { direction: output;
                 function: "A+B"; }
    }
    cell(OR3) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(C) { direction: input; }
        pin(Y) { direction: output;
                 function: "A+B+C"; }
    }
    cell(OR4) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(C) { direction: input; }
        pin(D) { direction: input; }
        pin(Y) { direction: output;
                 function: "A+B+C+D"; }
    }
    cell(XOR) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(Y) { direction: output;
                 function: "A^B"; }
    }
    cell(XNOR) {
        area: 2;
        pin(A) { direction: input; }
        pin(B) { direction: input; }
        pin(Y) { direction: output;
                 function: "(A^B)'"; }
    }
    cell(DLATCH) {
        area : 2;
        latch ("IQ","IQN") {
            enable: "G";
            data_in: "D";
        }

        pin(D) { direction: input; }
        pin(G) { direction: input; }
        pin(Q) { direction: output;
                 function: "IQ";
                 internal_node: "Q"; }
    }
}